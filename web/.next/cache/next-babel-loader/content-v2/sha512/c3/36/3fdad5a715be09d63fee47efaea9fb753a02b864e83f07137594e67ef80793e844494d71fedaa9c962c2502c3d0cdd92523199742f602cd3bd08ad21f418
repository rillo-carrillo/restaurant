{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jcarrill/go/src/github.com/rillo-carrillo/restaurant/web/src/components/InputField.js\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FormControl, FormLabel, Input, Box } from \"@chakra-ui/react\";\nimport { ErrorMessage, useField } from \"formik\";\n\nconst InputField = (_ref) => {\n  let {\n    id,\n    label,\n    err\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"id\", \"label\", \"err\"]);\n\n  const [field, prop] = useField(props);\n  let C = Input;\n  console.log(prop);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mt: 4\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\nInputField.propTypes = {\n  id: PropTypes.string,\n  label: PropTypes.string,\n  err: PropTypes.bool\n};\nexport default InputField;","map":{"version":3,"sources":["/Users/jcarrill/go/src/github.com/rillo-carrillo/restaurant/web/src/components/InputField.js"],"names":["React","PropTypes","FormControl","FormLabel","Input","Box","ErrorMessage","useField","InputField","id","label","err","props","field","prop","C","console","log","propTypes","string","bool"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,KAAjC,EAAwCC,GAAxC,QAAmD,kBAAnD;AACA,SAASC,YAAT,EAAuBC,QAAvB,QAAuC,QAAvC;;AACA,MAAMC,UAAU,GAAG,UAAkC;AAAA,MAAjC;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,KAAN;AAAaC,IAAAA;AAAb,GAAiC;AAAA,MAAZC,KAAY;;AACnD,QAAM,CAACC,KAAD,EAAQC,IAAR,IAAgBP,QAAQ,CAACK,KAAD,CAA9B;AACA,MAAIG,CAAC,GAAGX,KAAR;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,sBACE,QAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAT;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAbD;;AAeAN,UAAU,CAACU,SAAX,GAAuB;AACrBT,EAAAA,EAAE,EAAER,SAAS,CAACkB,MADO;AAErBT,EAAAA,KAAK,EAAET,SAAS,CAACkB,MAFI;AAGrBR,EAAAA,GAAG,EAAEV,SAAS,CAACmB;AAHM,CAAvB;AAMA,eAAeZ,UAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FormControl, FormLabel, Input, Box } from \"@chakra-ui/react\";\nimport { ErrorMessage, useField } from \"formik\";\nconst InputField = ({ id, label, err, ...props }) => {\n  const [field, prop] = useField(props);\n  let C = Input;\n  console.log(prop);\n  return (\n    <Box mt={4}>\n      {/* <FormControl id={id} isInvalid={!!error}>\n        <FormLabel htmlFor={field.name}>{label}</FormLabel>\n        <C {...field} {...props} id={field.name} />\n        {err && error ? <ErrorMessage>{error}</ErrorMessage> : null}\n      </FormControl> */}\n    </Box>\n  );\n};\n\nInputField.propTypes = {\n  id: PropTypes.string,\n  label: PropTypes.string,\n  err: PropTypes.bool,\n};\n\nexport default InputField;\n"]},"metadata":{},"sourceType":"module"}
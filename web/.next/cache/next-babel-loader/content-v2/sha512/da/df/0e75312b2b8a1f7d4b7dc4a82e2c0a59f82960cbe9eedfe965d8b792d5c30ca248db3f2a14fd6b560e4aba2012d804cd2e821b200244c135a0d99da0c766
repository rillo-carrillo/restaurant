{"ast":null,"code":"//Actions\nvar LOGIN_USER_REQUEST = \"restaurant/login/LOGIN_USER_REQUEST\";\nvar LOGIN_USER_SUCCESS = \"restaurant/login/LOGIN_USER_SUCCESS\";\nvar LOGIN_USER_FAILURE = \"restaurant/login/LOGIN_USER_FAILURE\";\nvar initialState = {\n  id: \"\",\n  error: \"Usuario no se encuentra\"\n}; //Reducer\n\nexport function userReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  switch (action.type) {\n    default:\n      return state;\n  }\n} //Actions\n\nexport function updateUpdate() {\n  return {\n    type: LOGIN_USER_REQUEST\n  };\n}\nexport function getUpdate() {\n  return function (dispatch) {\n    return get();\n  };\n}\n\nvar fetchUserId = function fetchUserId() {\n  return {\n    type: LOGIN_USER_REQUEST\n  };\n};\n\nvar fetchUserIdSuccess = function fetchUserIdSuccess(id) {\n  return {\n    type: LOGIN_USER_SUCCESS,\n    payload: id\n  };\n};\n\nvar fetchUserIdFailure = function fetchUserIdFailure(error) {\n  return {\n    type: LOGIN_USER_FAILURE,\n    payload: error\n  };\n};","map":{"version":3,"sources":["/Users/jcarrill/go/src/github.com/rillo-carrillo/restaurant/web/src/redux/ducks/user.js"],"names":["LOGIN_USER_REQUEST","LOGIN_USER_SUCCESS","LOGIN_USER_FAILURE","initialState","id","error","userReducer","state","action","type","updateUpdate","getUpdate","dispatch","get","fetchUserId","fetchUserIdSuccess","payload","fetchUserIdFailure"],"mappings":"AAAA;AACA,IAAMA,kBAAkB,GAAG,qCAA3B;AACA,IAAMC,kBAAkB,GAAG,qCAA3B;AACA,IAAMC,kBAAkB,GAAG,qCAA3B;AACA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,EAAE,EAAE,EADe;AAEnBC,EAAAA,KAAK,EAAE;AAFY,CAArB,C,CAIA;;AACA,OAAO,SAASC,WAAT,GAAwD;AAAA,MAAnCC,KAAmC,uEAA3BJ,YAA2B;AAAA,MAAbK,MAAa,uEAAJ,EAAI;;AAC7D,UAAQA,MAAM,CAACC,IAAf;AACE;AACE,aAAOF,KAAP;AAFJ;AAID,C,CACD;;AAEA,OAAO,SAASG,YAAT,GAAwB;AAC7B,SAAO;AAAED,IAAAA,IAAI,EAAET;AAAR,GAAP;AACD;AACD,OAAO,SAASW,SAAT,GAAqB;AAC1B,SAAO,UAACC,QAAD;AAAA,WAAcC,GAAG,EAAjB;AAAA,GAAP;AACD;;AACD,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,SAAO;AACLL,IAAAA,IAAI,EAAET;AADD,GAAP;AAGD,CAJD;;AAKA,IAAMe,kBAAkB,GAAG,SAArBA,kBAAqB,CAACX,EAAD,EAAQ;AACjC,SAAO;AACLK,IAAAA,IAAI,EAAER,kBADD;AAELe,IAAAA,OAAO,EAAEZ;AAFJ,GAAP;AAID,CALD;;AAMA,IAAMa,kBAAkB,GAAG,SAArBA,kBAAqB,CAACZ,KAAD,EAAW;AACpC,SAAO;AACLI,IAAAA,IAAI,EAAEP,kBADD;AAELc,IAAAA,OAAO,EAAEX;AAFJ,GAAP;AAID,CALD","sourcesContent":["//Actions\nconst LOGIN_USER_REQUEST = \"restaurant/login/LOGIN_USER_REQUEST\";\nconst LOGIN_USER_SUCCESS = \"restaurant/login/LOGIN_USER_SUCCESS\";\nconst LOGIN_USER_FAILURE = \"restaurant/login/LOGIN_USER_FAILURE\";\nconst initialState = {\n  id: \"\",\n  error: \"Usuario no se encuentra\",\n};\n//Reducer\nexport function userReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    default:\n      return state;\n  }\n}\n//Actions\n\nexport function updateUpdate() {\n  return { type: LOGIN_USER_REQUEST };\n}\nexport function getUpdate() {\n  return (dispatch) => get();\n}\nconst fetchUserId = () => {\n  return {\n    type: LOGIN_USER_REQUEST,\n  };\n};\nconst fetchUserIdSuccess = (id) => {\n  return {\n    type: LOGIN_USER_SUCCESS,\n    payload: id,\n  };\n};\nconst fetchUserIdFailure = (error) => {\n  return {\n    type: LOGIN_USER_FAILURE,\n    payload: error,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}